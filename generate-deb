#! /bin/sh

create_source_dist()
(
    cd source
    python setup.py sdist 1>&2
    gcs_version=$(cat globus/connect/server/version)
    cd "$OLDPWD"
    mv source/dist/globus_connect_server-${gcs_version}.tar.gz .
    echo globus_connect_server-${gcs_version}.tar.gz
)

download_include_binaries()
(
    packaging_dir="$1"
    include_binaries_file="${packaging_dir}/debian/globus-connect-server/debian/source/include-binaries"
    binaries=""

    while read line; do
	wheel="${line%%-*}"
	wheel_version="${line#*-}"
	wheel_version="${wheel_version%%-*}"
	mkdir -p "$wheel"
	pip download -q -d "$wheel" --no-deps "$wheel==$wheel_version"
        if [ $? = 0 ]; then
	    for f in "$wheel"/*; do
	        mv "$f" .
		echo "${f##*/}"
	    done
	fi
	rmdir "$wheel"
    done < "$include_binaries_file"
)

unpack_sources()
(
    gcs_source="$1"
    include_binaries="$2"
    build_dir="$3"

    rm -rf "${build_dir}"
    mkdir -p "${build_dir}"

    tar --strip 1 -C "${build_dir}" -zxf "${gcs_source}"
    for binary in $include_binaries; do
        cp "${binary}" "${build_dir}"
    done
)

debianize()
(
    packaging_dir="$1"
    build_dir="$2"
    changelog="${build_dir}/debian/changelog"
    cp -R ${packaging_dir}/debian/globus-connect-server/debian ${build_dir}/debian
    sed -e "s/@distro@/$(lsb_release -cs)/g" \
            < "${changelog}.in" \
            > "${changelog}"
)

build_packages()
(
    build_dir="$1"

    cd "${build_dir}"
    dpkg-buildpackage -uc -b

)

# MAIN
build_dir="build/globus-connect-server"

source_dist="$(create_source_dist)"
include_binaries="$(download_include_binaries "$(dirname "$0")/packaging")"
unpack_sources "$source_dist" "${include_binaries}" "${build_dir}"
debianize "$(dirname "$0")/packaging" "${build_dir}"
build_packages "${build_dir}"
